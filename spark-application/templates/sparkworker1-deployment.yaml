apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sparkworker1
  name: sparkworker1
  namespace: {{ .Values.global.namespace }}  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sparkworker1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: sparkworker1
    spec:
      containers:
        - env:
            - name: MASTER_HOST_NAME
              value: {{printf "spark://%s:%v" .Values.spark.master_config.ip .Values.spark.master_config.master_port }}
            - name: WORKER_MEMORY
              value: {{ .Values.spark.worker1_config.spark_node_memory }}
            - name: WORKER_CORES
              value: {{ .Values.spark.worker1_config.spark_node_cores | quote }}
          image: {{printf "%s/%s:%s" .Values.spark.worker_image.registry .Values.spark.worker_image.repository .Values.spark.worker_image.tag}}
          name: sparkworker1
          resources:
            requests:
              memory: {{ .Values.spark.worker1_config.node_resource.requests.memory }}
              cpu: {{ .Values.spark.worker1_config.node_resource.requests.cpu }}
            limits:
              memory: {{ .Values.spark.worker1_config.node_resource.limits.memory }}
              cpu: {{ .Values.spark.worker1_config.node_resource.limits.cpu }}
          ports:
            - containerPort: 8081
            # - containerPort: 7337
          tty: true
          volumeMounts:
            - mountPath: /root/.ivy2/jars
              name: spark-packages
            - mountPath: /root/.ivy2/cache
              name: spark-cache
      hostname: sparkworker1
      restartPolicy: Always
      volumes:
        - name: spark-packages
          persistentVolumeClaim:
            claimName: spark-packages
        - name: spark-cache
          persistentVolumeClaim:
            claimName: spark-cache
